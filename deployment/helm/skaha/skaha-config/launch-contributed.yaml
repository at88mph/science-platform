---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    canfar-net-sessionID: "${skaha.sessionid}"
    canfar-net-sessionName: "${skaha.sessionname}"
    canfar-net-sessionType: "${skaha.sessiontype}"
    canfar-net-userid: "${skaha.userid}"
    kueue.x-k8s.io/queue-name: skaha-workload-queue-interactive
  name: "${skaha.jobname}"
spec:
  parallelism: 1
  completions: 1
  {{ template "skaha.job.nodeSelector" . }}
  activeDeadlineSeconds: ${skaha.sessionexpiry}
  ttlSecondsAfterFinished: 86400
  template:
    metadata:
      labels:
        canfar-net-sessionID: "${skaha.sessionid}"
        canfar-net-sessionName: "${skaha.sessionname}"
        canfar-net-sessionType: "${skaha.sessiontype}"
        canfar-net-userid: "${skaha.userid}"
        job-name: "${skaha.jobname}"
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      restartPolicy: OnFailure
      ${skaha.schedulegpu}
      imagePullSecrets:
      - name: ${software.imagesecret}
      securityContext:
        {{ template "skaha.job.securityContext" . }}
      priorityClassName: uber-user-preempt-medium
      hostname: "${software.hostname}"
      initContainers:
      {{ template "skaha.job.initContainers" . }}
      containers:
      - name: "${skaha.jobname}"
        env:
        {{ template "skaha.job.environment.contributed" . }}
        image: ${software.imageid}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "${software.requests.ram}"
            cpu: "${software.requests.cores}"
            ephemeral-storage: "20Gi"
          limits:
            memory: "${software.limits.ram}"
            cpu: "${software.limits.cores}"
            ${software.limits.gpus}
            ephemeral-storage: "200Gi"
        ports:
        - containerPort: 5000
          protocol: TCP
          name: main-port
        volumeMounts:
        - mountPath: "/etc/passwd"
          name: etc-passwd
          subPath: passwd
        - mountPath: "/etc/group"
          name: etc-group
          subPath: group
        - mountPath: "${SKAHA_TLD}"
          name: cavern-volume
          subPath: "cavern"
        - mountPath: "/scratch"
          name: scratch-dir
          subPath: "${skaha.sessionid}"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
      volumes:
      - name: cavern-volume
        persistentVolumeClaim:
          claimName: skaha-workload-cavern-pvc
      - name: init-users-groups
        configMap:
          name: init-users-groups-config
          defaultMode: 0777
      - name: scratch-dir
        emptyDir: {}
      - name: etc-group
        emptyDir: {}
      - name: etc-passwd
        emptyDir: {}
